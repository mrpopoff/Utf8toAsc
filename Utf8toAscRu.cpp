#include "Utf8toAscRu.h"

#if defined(ARDUINO) && ARDUINO >= 100
    #include "Arduino.h"
#else
    #include "WProgram.h"
#endif

// except 0401 --> 0xa2 = Ё, 0451 --> 0xb5 = ё
const unsigned char utf_recode[] PROGMEM =
{
    0x41,0xa0,0x42,0xa1,0xe0,0x45,0xa3,0xa4,0xa5,0xa6,0x4b,0xa7,0x4d,0x48,0x4f,
    0xa8,0x50,0x43,0x54,0xa9,0xaa,0x58,0xe1,0xab,0xac,0xe2,0xad,0xae,0x62,0xaf,0xb0,0xb1,
    0x61,0xb2,0xb3,0xb4,0xe3,0x65,0xb6,0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0x6f,
    0xbe,0x70,0x63,0xbf,0x79,0xe4,0x78,0xe5,0xc0,0xc1,0xe6,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7
};

uint8_t Utf8toAscRu::translate(uint8_t value)
{
    uint8_t out_char = value;

    // guess that no translation required
    if (value < 0x80)
      return value;

    // UTF-8 handling
    if (value >= 0xc0)
    {
      utf_hi_char = value - 0xd0;
      return 0;
    }

    value &= 0x3f;

    if (!utf_hi_char && value == 1)
    {
        out_char = 0xa2; // Ё
    }
    else if (utf_hi_char == 1 && value == 0x11)
    {
        out_char = 0xb5; // ё
    }
    else
    {
        out_char = pgm_read_byte_near(utf_recode + value + (utf_hi_char << 6) - 0x10);
    }

    utf_hi_char = 0; // reset UTF-8 high part

    return out_char;
}
